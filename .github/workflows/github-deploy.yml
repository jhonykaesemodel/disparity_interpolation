name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]

jobs:
  build_manylinux_wheels:
    name: Build manylinux wheels
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        python-version: [cp37-cp37m, cp38-cp38, cp39-cp39]

    steps:
    - name: Info
      run: /opt/python/${{ matrix.python-version }}/bin/python --version

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        /opt/python/${{ matrix.python-version }}/bin/python -m pip install numpy cython
        yum -y install opencv opencv-devel opencv-python

    - name: Build
      run: /opt/python/${{ matrix.python-version }}/bin/python setup.py bdist_wheel

    - name: Audit wheel
      run: |
        auditwheel repair dist/*.whl
        cp wheelhouse/*-manylinux*.whl dist/.

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        path: dist/*-manylinux*.whl

  build_win_macos_wheels:
    name: Build wheels on ${{ matrix.os }} (py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, macos-10.15]
        python-version: ["3.7", "3.8", "3.9"]
      fail-fast: true
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: foo
          auto-activate-base: false
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true

      - name: Install dependencies
        run: conda install wheel opencv numpy cython

      - name: Build
        run: python setup.py bdist_wheel

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.whl

  publish_pypi:
    needs: [build_manylinux_wheels, build_win_macos_wheels]
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
