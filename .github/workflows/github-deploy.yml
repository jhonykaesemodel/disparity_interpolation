name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, windows-2019, macos-10.15]
        python-version: [3.9]
        compiler: gcc
        gcc: 4
      fail-fast: true
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ""
          auto-activate-base: true
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
      - name: Install wheel
        run: conda install wheel opencv numpy cython

      - name: build
        run: python setup.py sdist bdist_wheel

      - name: Audit wheel for manylinux
        if: matrix.os == 'ubuntu-16.04'
        run: |
          gcc --version
          pip install auditwheel
          python -m auditwheel repair --plat manylinux_2_24_x86_64 dist/*.whl
          rm -r dist
          mv wheelhouse dist
      - name: Store the binary wheel
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.whl

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # To test: repository_url: https://test.pypi.org/legacy/
